jsonpath course


YAML

ARRAY OR LISTS

Fruits:

- Orange
- Apple

The dash means that it is an element of an array or list.


DICTIONARY OR MAp

Banana:
  Calories: 105
  Fat: 0.4 g
  
  
To Store information about an object, like a car we use a Dictionary:

Color: blue
Model: Corvette
Price: $50


if you need to split the model into years then you can use a dictionary within a dictionary

ex:

Color: blue
Model:
  Name: Corvette
  Year: 1995
Price: $50


If you want to store list of multiple items of the same object, say cars with different colours then use a list


ex:
simple list 

- Blue Corvette
- Grey Corvette
- Red Corvette


if we want all the info like we had before we create a list of dictionairies, we then change our list from a list of strings to a list of dictionaries

- Blue Corvette
  Model:
    Name: Corvette
    Model: 1995
Dictionaries are Unordered
List  are Ordered

LIST OF DICTIONARIES

employees:
    - 
        name: john
        gender: male
        age: 24
        
        
employees:
    -
        name: john
        gender: male
        age: 24
    -
        name: sarah
        gender: female
        age: 28
        
        
employee:
    name: john
    gender: male
    age: 24
    address:
        city: edison
        state: 'new jersey'
        country: 'united states'
    payslips:
        -
            month: june
            amount: 1400
        -
            month: july
            amount: 2400
        -
            month: august
            amount: 3400
    

YAML uses indentation JSon uses curly brackets etc

Everything inside a pair of curly brackets forms a dictionary in JSON

In Json square brackets define a list/array

items in a list are separated by a comma

website

json2yaml.com To convert 

Json path is a query language to extract data from json

the . (dot) helps you select a particular field within a dictionary

so 

car.color 

car here is a dictionary and color is another dictionary

the top name of dictionary is known as the root element and is denoted by a $ sign

so 

{

  "car": {
  
  etc..........
  
  
a query then starts with that sign

$.car


All output from a json is available within a pair of square brackets


to get an element from a list/array use a square bracket and number of its position in the list

so 

[
"car",
"bus",
"truck"
]

0
1
2

if you want to elements then first and last from above then:

$[0,2]


if root element is a dictionary then our query has to start with a . (dot)

$.  (dot denotes a dictionary)


so to query a list withing two dictionaries:

$.car.wheels[1]

we did not use a dot after wheels because it is an array

but we want the model inside of the array which is a dictionary

$.car.wheels[1].model

CRITERIA

to query inside of an array with criteria use the ?

to check if items in the list are greater than 40 then use @ symbol

example

$[?(@>40)}

EX:

$.car.wheels[?(@.location == "rear-right")].model

WILD CARDS

to get all colors

query would be 

$.*.color

get all the models of the wheels in a list

$[*].model

to get the models of both bus and cars then:

$.*.wheels[*].model

LISTS

to get items in a list from 1 to 3

query:

$[0:4]

to step over ex: 2 items

$[0:8:2]

to get last item in list

$[-1] does not work in all 

so $[-1:0]

or [-1:]


JSON PATH with KUBERNETES

kubectl get nodes -o json

form json path query

ust json path query with kubectl

EX:

kubectl get pods -o=jsonpath='{.items[0].spec.containers[0].image }'


{"\n"}
{"\t"}

LOOPS - RANGE

iterate through items

'{range .items[*]} range means for each item

CUSTOM COLUMNS

EX:

kubectl get nodes -o=custom-columns=<COLUMN NAME>:<JSON PATH>

EX2:

kubectl get nodes -o=custom-columns=NODE:.metadata.name ,CPU: .status.capacity.cpu


kubectl get nodes --sort-by= .metadata.name










  
  
  
